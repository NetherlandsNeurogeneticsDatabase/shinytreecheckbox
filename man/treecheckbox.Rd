% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treecheckbox.R
\name{treecheckbox}
\alias{treecheckbox}
\title{Treecheckbox}
\usage{
treecheckbox(
  id,
  label,
  choices,
  levels = c(),
  collapsed = FALSE,
  selected = NULL,
  include_mode = FALSE,
  search_bar = TRUE,
  collapse_button = TRUE,
  select_button = TRUE,
  clickable_labels = FALSE,
  render_checkbox = TRUE,
  max_height = "35vh",
  min_height = "10vh",
  max_width = NULL,
  min_width = NULL
)
}
\arguments{
\item{id}{The \code{input} slot that will be used to access the value.}

\item{label}{The label that will be displayed in front. If \code{NULL} is provided, no label will be generated.}

\item{choices}{A dataframe or stringified JSON which will be used to generate the checkboxes.}

\item{levels}{A vector which contains the columnames that will be used to create the hierarchical data. From highest to lowest level. Is not necessary if \code{choices} is a stringified JSON.}

\item{collapsed}{Logical; If \code{TRUE} checkboxes will be collapsed on render.}

\item{selected}{A vector containing the values of which checkboxes will default as checked.}

\item{include_mode}{Logical; If \code{TRUE} the checkboxes will have an include mode.}

\item{search_bar}{Logical; If \code{TRUE} a search bar will be generated.}

\item{collapse_button}{Logical; If \code{TRUE} a collapse button will be generated.}

\item{select_button}{Logical; If \code{TRUE} a select button will be generated.}

\item{clickable_labels}{Logical; If \code{TRUE} the labels will be clickable.}

\item{render_checkbox}{Logical; If \code{TRUE} the checkboxes will be rendered.}

\item{max_height}{The maximum height of the widget. Must be VH or PX.}

\item{min_height}{The minimum height of the widget. Must be VH or PX.}

\item{max_width}{The maximum width of the widget. Must be VH or PX.}

\item{min_width}{The minimum width of the widget. Must be VH or PX.}
}
\description{
Creates the checkboxes.
}
\examples{
library(shiny)
library(shinytreecheckbox)
choices = data.frame(order = c("Primates", "Primates", "Primates", "Primates", "Primates", "Carnivora", "Carnivora", "Birds", "Birds", "Birds", "Fish", "Fish", "Fish"), genus = c("Baboons", "Capuchin monkeys", "Chimpanzees", "Gorillas", "Mandrills", "Seals", "Candids", "Chiroxiphia", "Montezuma oropendolas", "Pale chanting goshawks", "Cichlids", "Moon wrasse", "Mozambique tilapia"))
ui <- fluidPage(
 shinytreecheckbox::treecheckbox("thisisanid", "mytreecheckbox", choices, c("order", "genus"), T, c("Fish", "Gorillas"))
)
server <- function(input, output, session) {}
shinyApp(ui, server)

}
